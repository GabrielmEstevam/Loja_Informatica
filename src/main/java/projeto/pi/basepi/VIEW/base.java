/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package projeto.pi.basepi.VIEW;

import java.awt.Color;
import java.sql.Date;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.ArrayList;
import projeto.pi.basepi.VIEW.DetalhePedido;
import projeto.pi.basepi.VIEW.DetalhesCliente;
import projeto.pi.basepi.VIEW.AtualizarCliente;
import projeto.pi.basepi.VIEW.AtualizarProduto;
import projeto.pi.basepi.VIEW.AtualizarVendedor;
import projeto.pi.basepi.VIEW.CadastroCliente;
import projeto.pi.basepi.VIEW.CadastroVendedor;
import projeto.pi.basepi.VIEW.CadastroProduto;
import projeto.pi.basepi.VIEW.AtualizarPedido;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import projeto.pi.basepi.DAO.ClienteDAO;
import projeto.pi.basepi.DAO.EnderecoDAO;
import projeto.pi.basepi.DAO.MarcaDAO;
import projeto.pi.basepi.DAO.PedidoDAO;
import projeto.pi.basepi.DAO.ProdutoDAO;
import projeto.pi.basepi.DAO.VendedorDAO;
import projeto.pi.basepi.MODELS.Cliente;
import projeto.pi.basepi.MODELS.DTO.PedidoDTO;
import projeto.pi.basepi.MODELS.DTO.PedidoDetalhesDTO;
import projeto.pi.basepi.MODELS.Endereco;
import projeto.pi.basepi.MODELS.ItemPedido;
import projeto.pi.basepi.MODELS.Marca;
import projeto.pi.basepi.MODELS.Pedido;
import projeto.pi.basepi.MODELS.Produto;
import projeto.pi.basepi.MODELS.Vendedor;

/**
 *
 * @author athyla
 */
public class base extends javax.swing.JFrame {

    //Variavel para mostrar o total
    double valorTotal = 0;
    //Variavel Para Controlar as linha  da tabela novo Pedido
    int ControleTabelaNovoPedido = 0;
    Vendedor objVendedor = null;
    Cliente objCliente = null;

    /**
     * Creates new form base
     */
    public base() {
        initComponents();
    }
    /**
     * @author José Rodrigo
     * Esse construtor do Jframe Base com Parametro, ele é iniciado após o login
     * para iniciar a base do sistema com um Vendedor, e modificando o TextField
     * txtNpVendedor colocando o nome do vendedor Logado
     * @param Vendedor vendedor 
     *
     */
    public base(Vendedor vendedor) {
        initComponents();
        objVendedor = vendedor;
        txtNpVendedor.setText(objVendedor.getNome());
        txtNpVendedor.enable(false);
        txtNpCliente.setEnabled(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBox1 = new javax.swing.JCheckBox();
        pnlNovoPedido = new javax.swing.JTabbedPane();
        pnlNP = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblNovoPedido = new javax.swing.JTable();
        btnAdicionarNovoPedido = new javax.swing.JButton();
        lblNpVendedor = new javax.swing.JLabel();
        txtNpVendedor = new javax.swing.JTextField();
        txtNpDtPedido = new javax.swing.JFormattedTextField();
        lblNpDt = new javax.swing.JLabel();
        lblNpCliente = new javax.swing.JLabel();
        txtNpCliente = new javax.swing.JTextField();
        lblNpCPF = new javax.swing.JLabel();
        btnNpConfirmar = new javax.swing.JButton();
        lblNpCliente2 = new javax.swing.JLabel();
        lblNpProduto = new javax.swing.JLabel();
        btnNpExcluir = new javax.swing.JButton();
        txtNpValorTotal = new javax.swing.JTextField();
        lblNpProduto1 = new javax.swing.JLabel();
        txtNpCpfCliente = new javax.swing.JFormattedTextField();
        btnNpBuscarCliente = new javax.swing.JButton();
        txtNpAddProduto = new javax.swing.JFormattedTextField();
        txtNpQtd = new javax.swing.JFormattedTextField();
        pnlClientes = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblClientes = new javax.swing.JTable();
        txtPesquisarClientes = new javax.swing.JTextField();
        btnPesquisarClientes = new javax.swing.JButton();
        btnDetalhesClientes = new javax.swing.JButton();
        btnCadastrarClientes = new javax.swing.JButton();
        btnAtualizarClientes = new javax.swing.JButton();
        btnExcluirClientes = new javax.swing.JButton();
        jblbusca = new javax.swing.JComboBox<>();
        pnlProdutos = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblProdutos = new javax.swing.JTable();
        txtPesquisarProdutos = new javax.swing.JTextField();
        btnPesquisarProdutos = new javax.swing.JButton();
        btnAtualizarProdutos = new javax.swing.JButton();
        btnCadastrarProdutos = new javax.swing.JButton();
        btnExcluirProdutos = new javax.swing.JButton();
        cbxConsulta = new javax.swing.JComboBox<>();
        pnlVendedor = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblVendedor = new javax.swing.JTable();
        txtPesquisarVendedor = new javax.swing.JTextField();
        btnPesquisar = new javax.swing.JButton();
        btnAtualizarVendedor = new javax.swing.JButton();
        btnCadastrarVendedor = new javax.swing.JButton();
        btnExcluirVendedor = new javax.swing.JButton();
        cboVendedor = new javax.swing.JComboBox<>();
        pnlPedidos = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblPedidos = new javax.swing.JTable();
        txtPesquisarPedidos = new javax.swing.JTextField();
        btnPesquisarPedidos = new javax.swing.JButton();
        btnDetalhesPedido = new javax.swing.JButton();
        btnExcluirPedidos = new javax.swing.JButton();
        cboPedidos = new javax.swing.JComboBox<>();
        pnlRelatorio = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnConfirmar = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblRelatorioSintetico = new javax.swing.JTable();
        txtInicio = new javax.swing.JFormattedTextField();
        txtFim = new javax.swing.JFormattedTextField();
        btnRelatorioSintetico = new javax.swing.JButton();
        txtRelatorioSintetico = new javax.swing.JLabel();
        btnRelatorioAnalitico = new javax.swing.JButton();
        lblTotalDeVendas = new javax.swing.JLabel();
        lblValorDeTotalDeVendas = new javax.swing.JLabel();

        jCheckBox1.setText("jCheckBox1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblNovoPedido.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Cod Produto", "Cod Marca", "Marca", "Produto", "Quantidade", "Preço Unitário"
            }
        ));
        jScrollPane6.setViewportView(tblNovoPedido);

        btnAdicionarNovoPedido.setText("Adicionar");
        btnAdicionarNovoPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarNovoPedidoActionPerformed(evt);
            }
        });

        lblNpVendedor.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblNpVendedor.setText("Vendedor:");

        try {
            txtNpDtPedido.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        lblNpDt.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblNpDt.setText("Data do Pedido");

        lblNpCliente.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblNpCliente.setText("Cliente:");

        lblNpCPF.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblNpCPF.setText("CPF Cliente:");

        btnNpConfirmar.setText("Confirmar");
        btnNpConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNpConfirmarActionPerformed(evt);
            }
        });

        lblNpCliente2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblNpCliente2.setText("Valor Total:");

        lblNpProduto.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblNpProduto.setText("Produto:");

        btnNpExcluir.setText("Excluir");
        btnNpExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNpExcluirActionPerformed(evt);
            }
        });

        txtNpValorTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNpValorTotalActionPerformed(evt);
            }
        });

        lblNpProduto1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblNpProduto1.setText("Qtd");

        try {
            txtNpCpfCliente.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        btnNpBuscarCliente.setText("Buscar Cliente");
        btnNpBuscarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNpBuscarClienteActionPerformed(evt);
            }
        });

        txtNpAddProduto.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        txtNpQtd.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        javax.swing.GroupLayout pnlNPLayout = new javax.swing.GroupLayout(pnlNP);
        pnlNP.setLayout(pnlNPLayout);
        pnlNPLayout.setHorizontalGroup(
            pnlNPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlNPLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlNPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlNPLayout.createSequentialGroup()
                        .addGroup(pnlNPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlNPLayout.createSequentialGroup()
                                .addGroup(pnlNPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblNpVendedor)
                                    .addComponent(lblNpCliente))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(pnlNPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtNpCliente)
                                    .addComponent(txtNpVendedor, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(pnlNPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblNpDt, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblNpCPF, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(pnlNPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtNpDtPedido, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                                    .addComponent(txtNpCpfCliente))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnNpBuscarCliente)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane6)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlNPLayout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(lblNpCliente2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNpValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnNpConfirmar)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnNpExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlNPLayout.createSequentialGroup()
                        .addGroup(pnlNPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNpProduto1)
                            .addComponent(txtNpQtd, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlNPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlNPLayout.createSequentialGroup()
                                .addComponent(txtNpAddProduto)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnAdicionarNovoPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlNPLayout.createSequentialGroup()
                                .addComponent(lblNpProduto)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        pnlNPLayout.setVerticalGroup(
            pnlNPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlNPLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(pnlNPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNpVendedor)
                    .addComponent(txtNpVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNpDt)
                    .addComponent(txtNpDtPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlNPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNpCliente)
                    .addComponent(txtNpCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNpCPF)
                    .addComponent(txtNpCpfCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNpBuscarCliente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(pnlNPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNpProduto)
                    .addComponent(lblNpProduto1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlNPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdicionarNovoPedido)
                    .addComponent(txtNpAddProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNpQtd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(pnlNPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlNPLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(btnNpExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 426, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(214, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlNPLayout.createSequentialGroup()
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnNpConfirmar)
                        .addGap(149, 149, 149))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlNPLayout.createSequentialGroup()
                        .addGroup(pnlNPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNpValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNpCliente2))
                        .addGap(152, 152, 152))))
        );

        pnlNovoPedido.addTab("Novo Pedido", pnlNP);

        tblClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Cod Cliente", "CPF", "Nome", "Telefone", "E-mail"
            }
        ));
        jScrollPane4.setViewportView(tblClientes);

        btnPesquisarClientes.setText("Pesquisar");
        btnPesquisarClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarClientesActionPerformed(evt);
            }
        });

        btnDetalhesClientes.setText("Detalhes");
        btnDetalhesClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetalhesClientesActionPerformed(evt);
            }
        });

        btnCadastrarClientes.setText("Cadastrar");
        btnCadastrarClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarClientesActionPerformed(evt);
            }
        });

        btnAtualizarClientes.setText("Atualizar");
        btnAtualizarClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarClientesActionPerformed(evt);
            }
        });

        btnExcluirClientes.setText("Excluir");
        btnExcluirClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirClientesActionPerformed(evt);
            }
        });

        jblbusca.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "CPF", "Nome", " " }));
        jblbusca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jblbuscaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlClientesLayout = new javax.swing.GroupLayout(pnlClientes);
        pnlClientes.setLayout(pnlClientesLayout);
        pnlClientesLayout.setHorizontalGroup(
            pnlClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlClientesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4)
                    .addGroup(pnlClientesLayout.createSequentialGroup()
                        .addGroup(pnlClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlClientesLayout.createSequentialGroup()
                                .addComponent(btnCadastrarClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(38, 38, 38)
                                .addComponent(btnDetalhesClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35)
                                .addComponent(btnAtualizarClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(btnExcluirClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlClientesLayout.createSequentialGroup()
                                .addComponent(jblbusca, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtPesquisarClientes, javax.swing.GroupLayout.DEFAULT_SIZE, 547, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(btnPesquisarClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(21, 21, 21)))
                .addContainerGap())
        );
        pnlClientesLayout.setVerticalGroup(
            pnlClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlClientesLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(pnlClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDetalhesClientes)
                    .addComponent(btnCadastrarClientes)
                    .addComponent(btnAtualizarClientes)
                    .addComponent(btnExcluirClientes))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnPesquisarClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtPesquisarClientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jblbusca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 611, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(115, Short.MAX_VALUE))
        );

        pnlNovoPedido.addTab("Clientes", pnlClientes);

        tblProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Cod", "Cod Marca", "Produto", "Descrição", "Preço", "Quantidade em Estoque"
            }
        ));
        jScrollPane3.setViewportView(tblProdutos);

        btnPesquisarProdutos.setText("Pesquisar");
        btnPesquisarProdutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarProdutosActionPerformed(evt);
            }
        });

        btnAtualizarProdutos.setText("Atualizar");
        btnAtualizarProdutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarProdutosActionPerformed(evt);
            }
        });

        btnCadastrarProdutos.setText("Cadastrar");
        btnCadastrarProdutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarProdutosActionPerformed(evt);
            }
        });

        btnExcluirProdutos.setText("Excluir");
        btnExcluirProdutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirProdutosActionPerformed(evt);
            }
        });

        cbxConsulta.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Marca", "Produto" }));

        javax.swing.GroupLayout pnlProdutosLayout = new javax.swing.GroupLayout(pnlProdutos);
        pnlProdutos.setLayout(pnlProdutosLayout);
        pnlProdutosLayout.setHorizontalGroup(
            pnlProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlProdutosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(pnlProdutosLayout.createSequentialGroup()
                        .addGroup(pnlProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlProdutosLayout.createSequentialGroup()
                                .addComponent(btnCadastrarProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(38, 38, 38)
                                .addComponent(btnAtualizarProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35)
                                .addComponent(btnExcluirProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlProdutosLayout.createSequentialGroup()
                                .addComponent(cbxConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtPesquisarProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, 543, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnPesquisarProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 32, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlProdutosLayout.setVerticalGroup(
            pnlProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlProdutosLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(pnlProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAtualizarProdutos)
                    .addComponent(btnCadastrarProdutos)
                    .addComponent(btnExcluirProdutos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPesquisarProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPesquisarProdutos)
                    .addComponent(cbxConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 611, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(119, Short.MAX_VALUE))
        );

        pnlNovoPedido.addTab("Produtos", pnlProdutos);

        tblVendedor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Cod", "Nome", "Data de Nascimento", "Email", "Sexo"
            }
        ));
        jScrollPane1.setViewportView(tblVendedor);

        btnPesquisar.setText("Pesquisar");
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        btnAtualizarVendedor.setText("Atualizar");
        btnAtualizarVendedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarVendedorActionPerformed(evt);
            }
        });

        btnCadastrarVendedor.setText("Cadastrar");
        btnCadastrarVendedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarVendedorActionPerformed(evt);
            }
        });

        btnExcluirVendedor.setText("Excluir");
        btnExcluirVendedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirVendedorActionPerformed(evt);
            }
        });

        cboVendedor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "  ", "Nome", "Sexo" }));
        cboVendedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboVendedorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlVendedorLayout = new javax.swing.GroupLayout(pnlVendedor);
        pnlVendedor.setLayout(pnlVendedorLayout);
        pnlVendedorLayout.setHorizontalGroup(
            pnlVendedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlVendedorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlVendedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlVendedorLayout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(pnlVendedorLayout.createSequentialGroup()
                        .addGroup(pnlVendedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlVendedorLayout.createSequentialGroup()
                                .addComponent(btnCadastrarVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(38, 38, 38)
                                .addComponent(btnAtualizarVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35)
                                .addComponent(btnExcluirVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlVendedorLayout.createSequentialGroup()
                                .addComponent(cboVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtPesquisarVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 525, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(14, 14, 14))))
        );
        pnlVendedorLayout.setVerticalGroup(
            pnlVendedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlVendedorLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(pnlVendedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAtualizarVendedor)
                    .addComponent(btnCadastrarVendedor)
                    .addComponent(btnExcluirVendedor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlVendedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPesquisarVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPesquisar)
                    .addComponent(cboVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 611, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlNovoPedido.addTab("Vendedor", pnlVendedor);

        tblPedidos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Cod", "Cliente", "CPF", "Valor", "Data do Pedido"
            }
        ));
        jScrollPane5.setViewportView(tblPedidos);

        txtPesquisarPedidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPesquisarPedidosActionPerformed(evt);
            }
        });

        btnPesquisarPedidos.setText("Pesquisar");
        btnPesquisarPedidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarPedidosActionPerformed(evt);
            }
        });

        btnDetalhesPedido.setText("Detalhes");
        btnDetalhesPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetalhesPedidoActionPerformed(evt);
            }
        });

        btnExcluirPedidos.setText("Excluir");
        btnExcluirPedidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirPedidosActionPerformed(evt);
            }
        });

        cboPedidos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "  ", "Cod", "Cliente", "CPF", "Valor", "Data do Pedido" }));
        cboPedidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboPedidosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlPedidosLayout = new javax.swing.GroupLayout(pnlPedidos);
        pnlPedidos.setLayout(pnlPedidosLayout);
        pnlPedidosLayout.setHorizontalGroup(
            pnlPedidosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPedidosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlPedidosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlPedidosLayout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 775, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(pnlPedidosLayout.createSequentialGroup()
                        .addGroup(pnlPedidosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlPedidosLayout.createSequentialGroup()
                                .addComponent(btnDetalhesPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnExcluirPedidos, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(pnlPedidosLayout.createSequentialGroup()
                                .addComponent(cboPedidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtPesquisarPedidos)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnPesquisarPedidos, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(14, 14, 14))))
        );
        pnlPedidosLayout.setVerticalGroup(
            pnlPedidosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPedidosLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(pnlPedidosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDetalhesPedido)
                    .addComponent(btnExcluirPedidos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlPedidosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPesquisarPedidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPesquisarPedidos)
                    .addComponent(cboPedidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 611, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(115, Short.MAX_VALUE))
        );

        pnlNovoPedido.addTab("Pedidos", pnlPedidos);

        jPanel1.setPreferredSize(new java.awt.Dimension(500, 377));

        jLabel2.setText("Data Inicial :");

        jLabel3.setText("Data Final :");

        btnConfirmar.setText("Confirmar");

        tblRelatorioSintetico.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "N° do Pedido", "Valor do Pedido", "DataPedido", "Cliente"
            }
        ));
        jScrollPane2.setViewportView(tblRelatorioSintetico);

        try {
            txtInicio.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            txtFim.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        btnRelatorioSintetico.setText("Buscar");
        btnRelatorioSintetico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRelatorioSinteticoActionPerformed(evt);
            }
        });

        txtRelatorioSintetico.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtRelatorioSintetico.setText("Relatório sintético");

        btnRelatorioAnalitico.setText("Gerar Relatorio Analítico ");
        btnRelatorioAnalitico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRelatorioAnaliticoActionPerformed(evt);
            }
        });

        lblTotalDeVendas.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTotalDeVendas.setText("Total de Vendas :");

        lblValorDeTotalDeVendas.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtFim, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnRelatorioSintetico)
                        .addContainerGap(316, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtRelatorioSintetico)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblTotalDeVendas)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblValorDeTotalDeVendas)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnRelatorioAnalitico)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(txtInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRelatorioSintetico))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtRelatorioSintetico)
                .addGap(5, 5, 5)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRelatorioAnalitico)
                    .addComponent(lblTotalDeVendas)
                    .addComponent(lblValorDeTotalDeVendas))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 343, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );

        javax.swing.GroupLayout pnlRelatorioLayout = new javax.swing.GroupLayout(pnlRelatorio);
        pnlRelatorio.setLayout(pnlRelatorioLayout);
        pnlRelatorioLayout.setHorizontalGroup(
            pnlRelatorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlRelatorioLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 775, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlRelatorioLayout.setVerticalGroup(
            pnlRelatorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRelatorioLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 781, Short.MAX_VALUE)
                .addGap(22, 22, 22))
        );

        pnlNovoPedido.addTab("Relatório", pnlRelatorio);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlNovoPedido)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlNovoPedido)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtPesquisarPedidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPesquisarPedidosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPesquisarPedidosActionPerformed

    private void btnDetalhesPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetalhesPedidoActionPerformed
        //Resgatar dados da linha
        int linhaSelecionada = tblPedidos.getSelectedRow();

        //Resgatar os dados das colunas
        DefaultTableModel modelo = (DefaultTableModel) tblPedidos.getModel();

        if (linhaSelecionada >= 0) {
            int id
                    = Integer.parseInt(modelo.getValueAt(linhaSelecionada, 0)
                            .toString());

            ArrayList<PedidoDetalhesDTO> pedDetalhes = PedidoDAO.detalhes(id);

            DetalhePedido dp = new DetalhePedido(pedDetalhes);
            dp.setVisible(true);

        } else {
            JOptionPane.showMessageDialog(rootPane,
                    "Selecione uma linha!");
        }


    }//GEN-LAST:event_btnDetalhesPedidoActionPerformed

    private void btnNpConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNpConfirmarActionPerformed
        // Pegando dados para verificar se está preenchido
        boolean controle = false;
        DefaultTableModel modelo = (DefaultTableModel) tblNovoPedido.getModel();
        if (ControleTabelaNovoPedido == 0 || txtNpCliente.getText().trim().equalsIgnoreCase("")) {
            controle = true;
        }

        //Fim do Pegando dados para verificar se está preenchido
        if (controle == true) {
            JOptionPane.showMessageDialog(rootPane, "Preencha todos os campos");
        } else {
            Pedido novoPedido = new Pedido();
            novoPedido.setIdCliente(objCliente.getIdCliente());

            novoPedido.setIdVendedor(objVendedor.getIdVendedor());
            double valorT = Double.parseDouble(txtNpValorTotal.getText());
            novoPedido.setTotal(valorT);
            Date dtEua = TraduzirData(txtNpDtPedido.getText());
            novoPedido.setDataPedido(dtEua);

            ArrayList<ItemPedido> listaItens = new ArrayList<ItemPedido>();

            for (int i = 0; i < modelo.getRowCount(); i++) {

                ItemPedido novoItem = new ItemPedido();
                //Dados da linha atual
                int id = Integer.parseInt(String.valueOf(modelo.getValueAt(i, 0)));
                int qtd = Integer.parseInt(String.valueOf(modelo.getValueAt(i, 4)));
                double precoUnit = Double.parseDouble(String.valueOf(modelo.getValueAt(i, 5)));

                novoItem.setIdProduto(id);
                novoItem.setQntd(qtd);
                novoItem.setPreco(precoUnit);

                listaItens.add(novoItem);
            }

            novoPedido.setListaItens(listaItens);

            //TODO: Enviar o objeto novaNota para a DAO
            boolean retorno = PedidoDAO.salvar(novoPedido);

            if (retorno) {
                JOptionPane.showMessageDialog(rootPane, "Sucesso!");
            } else {
                JOptionPane.showMessageDialog(rootPane, "Falha!");
            }

        }
    }//GEN-LAST:event_btnNpConfirmarActionPerformed


    private void txtNpValorTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNpValorTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNpValorTotalActionPerformed

    private void btnCadastrarClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarClientesActionPerformed
        CadastroCliente cdc = new CadastroCliente();
        cdc.setVisible(true);
    }//GEN-LAST:event_btnCadastrarClientesActionPerformed

    private void btnDetalhesClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetalhesClientesActionPerformed
        //Resgatar dados da linha
        int linhaSelecionada = tblClientes.getSelectedRow();

        //Resgatar os dados das colunas
        DefaultTableModel modelo = (DefaultTableModel) tblClientes.getModel();

        if (linhaSelecionada >= 0) {
            int id
                    = Integer.parseInt(modelo.getValueAt(linhaSelecionada, 0)
                            .toString());

            ArrayList<Cliente> cliente = ClienteDAO.Detalhes(id);
            ArrayList<Endereco> endereco = EnderecoDAO.Detalhes(cliente.get(0).getIdEndereco());

            DetalhesCliente dc = new DetalhesCliente(cliente.get(0), endereco.get(0));
            dc.setVisible(true);

        } else {
            JOptionPane.showMessageDialog(rootPane,
                    "Selecione uma linha!");
        }
    }//GEN-LAST:event_btnDetalhesClientesActionPerformed

    private void btnAtualizarClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarClientesActionPerformed
        int linhaSelecionada = tblClientes.getSelectedRow();

        //Resgatar os dados das colunas
        DefaultTableModel modelo = (DefaultTableModel) tblClientes.getModel();

        if (linhaSelecionada >= 0) {
            int id
                    = Integer.parseInt(modelo.getValueAt(linhaSelecionada, 0)
                            .toString());

            ArrayList<Cliente> cliente = ClienteDAO.Detalhes(id);
            ArrayList<Endereco> endereco = EnderecoDAO.Detalhes(cliente.get(0).getIdEndereco());

            AtualizarCliente ac = new AtualizarCliente(cliente.get(0), endereco.get(0));
            ac.setVisible(true);

        } else {
            JOptionPane.showMessageDialog(rootPane,
                    "Selecione uma linha!");
        }

    }//GEN-LAST:event_btnAtualizarClientesActionPerformed

    private void btnExcluirClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirClientesActionPerformed
        int linhaSelecionada = tblClientes.getSelectedRow();
        int idCliente = 0;
        int idEndereco = 0;
        boolean retorno = false;
        //Resgatar os dados das colunas
        DefaultTableModel modelo = (DefaultTableModel) tblClientes.getModel();

        if (linhaSelecionada >= 0) {
            idCliente
                    = Integer.parseInt(modelo.getValueAt(linhaSelecionada, 0)
                            .toString());

            ArrayList<Cliente> cliente = ClienteDAO.Detalhes(idCliente);
            ArrayList<Endereco> endereco = EnderecoDAO.Detalhes(cliente.get(0).getIdEndereco());
            try {
                idEndereco = endereco.get(0).getIdEndereco();
                idEndereco = endereco.get(0).getIdEndereco();
            } catch (Exception ex) {

            }
        }
        try {
            ArrayList<Pedido> pedidos = PedidoDAO.PegandoOsIdPedidosDoCliente(idCliente);
            if (pedidos.get(0).getIdPedido() > 0) {
                JOptionPane.showMessageDialog(rootPane, "Não é possivel excluir o cliente, pois ele já realizou pedidos no sistema");
            }
        } catch (Exception ex) {
            retorno = ClienteDAO.excluir(idCliente, idEndereco);
        }

        if (retorno == false) {
            JOptionPane.showMessageDialog(rootPane, " Não foi excluido");
        } else {
            JOptionPane.showMessageDialog(rootPane, "Excluido");
        }
    }//GEN-LAST:event_btnExcluirClientesActionPerformed

    private void btnCadastrarProdutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarProdutosActionPerformed
        CadastroProduto cp = new CadastroProduto();
        cp.setVisible(true);
    }//GEN-LAST:event_btnCadastrarProdutosActionPerformed

    private void btnAtualizarProdutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarProdutosActionPerformed
        int linhaSelecionada = tblProdutos.getSelectedRow();

        DefaultTableModel modelo = (DefaultTableModel) tblProdutos.getModel();

        if (linhaSelecionada >= 0) {
            
            String texto = modelo.getValueAt(linhaSelecionada, 1).toString();
            
            int idMarca =0;
            
            if (texto.equals("amd") || texto.equals("AMD")) {
                    idMarca = 1;              
                }else if(texto.equals("INTEL") || texto.equals("intel")){
                    idMarca = 2;
                    }else if(texto.equals("corsair") || texto.equals("CORSAIR")){
                    idMarca = 3;
                }else if(texto.equals("gigabyte") || texto.equals("GIGABYTE")){
                    idMarca = 4;
                }else if(texto.equals("ASROCK    ") || texto.equals("asrock")){
                    idMarca = 5;
                }else if(texto.equals("MSI    ") || texto.equals("msi")){
                    idMarca = 6;
                }else{
                    JOptionPane.showMessageDialog(rootPane, "Nao temos essa marca por favor inserir outra");
                }
            
            
            
            
            
            int idSelecionado = Integer.parseInt(modelo.getValueAt(linhaSelecionada, 0).toString());
            String nome = modelo.getValueAt(linhaSelecionada, 2).toString();
            String descricao = modelo.getValueAt(linhaSelecionada, 3).toString();
            double preco = Double.parseDouble(modelo.getValueAt(linhaSelecionada, 4).toString());
            int qtdEstoque = Integer.parseInt(modelo.getValueAt(linhaSelecionada, 5).toString());

            Produto objAlterar = new Produto(idSelecionado, idMarca, nome, descricao, preco, qtdEstoque);

            AtualizarProduto telaAlterar = new AtualizarProduto(objAlterar);
            telaAlterar.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(rootPane, "Selecione uma Linha");
        }
    }//GEN-LAST:event_btnAtualizarProdutosActionPerformed

    private void btnExcluirProdutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirProdutosActionPerformed
        int linhaSelecionada = tblProdutos.getSelectedRow();

        DefaultTableModel modelo = (DefaultTableModel) tblProdutos.getModel();

        int idExcluir = Integer.parseInt(modelo.getValueAt(linhaSelecionada, 0).toString());

        boolean retorno = ProdutoDAO.excluir(idExcluir);

        if (retorno) {
            JOptionPane.showMessageDialog(rootPane, "Sucesso");
        } else {
            JOptionPane.showMessageDialog(rootPane, "Erro");
        }
    }//GEN-LAST:event_btnExcluirProdutosActionPerformed

    private void btnCadastrarVendedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarVendedorActionPerformed
        CadastroVendedor cv = new CadastroVendedor();
        cv.setVisible(true);
    }//GEN-LAST:event_btnCadastrarVendedorActionPerformed

    private void btnAtualizarVendedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarVendedorActionPerformed
        int linhaSelecionada = tblVendedor.getSelectedRow();

        //Resgatar os dados das colunas
        DefaultTableModel modelo = (DefaultTableModel) tblVendedor.getModel();

        if (linhaSelecionada >= 0) {
            int id
                    = Integer.parseInt(modelo.getValueAt(linhaSelecionada, 0)
                            .toString());

            String nome
                    = modelo.getValueAt(linhaSelecionada, 1)
                            .toString();

            String dt = modelo.getValueAt(linhaSelecionada, 2).toString();

            Date nascimento = TraduzirData(dt);

            String email = modelo.getValueAt(linhaSelecionada, 3).toString();

            String sexo = modelo.getValueAt(linhaSelecionada, 4).toString();

            //Passar valores para o objeto
            Vendedor novoVendedor = new Vendedor(id, nome, nascimento, email, sexo);

            //Enviar o objeto para a tela de cadastro
            AtualizarVendedor atualizar = new AtualizarVendedor(novoVendedor);
            atualizar.setVisible(true);

        } else {
            JOptionPane.showMessageDialog(rootPane,
                    "Selecione uma linha!");
        }


    }//GEN-LAST:event_btnAtualizarVendedorActionPerformed

    private void btnExcluirVendedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirVendedorActionPerformed

        int linhaSelecionada = tblVendedor.getSelectedRow();

        DefaultTableModel modelo = (DefaultTableModel) tblVendedor.getModel();
        int idExcluir
                = Integer.parseInt(modelo.getValueAt(linhaSelecionada, 0).toString());

        //Chamar a DAO para excluir
        boolean retorno = VendedorDAO.excluir(idExcluir);

        if (retorno) {
            JOptionPane.showMessageDialog(rootPane, "Excluido com Sucesso!");
        } else {
            JOptionPane.showMessageDialog(rootPane, "Falha!");
        }
    }//GEN-LAST:event_btnExcluirVendedorActionPerformed

    private void btnExcluirPedidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirPedidosActionPerformed
        int linhaSelecionada = tblPedidos.getSelectedRow();

        DefaultTableModel modelo = (DefaultTableModel) tblPedidos.getModel();
        int idExcluir
                = Integer.parseInt(modelo.getValueAt(linhaSelecionada, 0).toString());

        //Chamar a DAO para excluir
        boolean retorno = PedidoDAO.excluir(idExcluir);

        if (retorno) {
            JOptionPane.showMessageDialog(rootPane, "Excluido com Sucesso!");
        } else {
            JOptionPane.showMessageDialog(rootPane, "Falha!");
        }
    }//GEN-LAST:event_btnExcluirPedidosActionPerformed

    private void btnPesquisarPedidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarPedidosActionPerformed
        txtPesquisarPedidos.setBackground(Color.WHITE);
        if (txtPesquisarPedidos.getText().trim().equals("") && cboPedidos.getSelectedIndex() == 0) {
            ArrayList<PedidoDTO> lista
                    = PedidoDAO.listar();

            listarTabelaPedido(lista);
        } else if (cboPedidos.getSelectedIndex() == 1 && !txtPesquisarPedidos.getText().trim().equals("")) {
            //Chamar a DAO passando o numero da nota
            int cod
                    = Integer.parseInt(txtPesquisarPedidos.getText());

//            //TODO: Chamar a DAO e alimentar a tabela
            ArrayList<PedidoDTO> lista = PedidoDAO.buscarPorCod(cod);
            listarTabelaPedido(lista);
        } else if (cboPedidos.getSelectedIndex() == 2 && !txtPesquisarPedidos.getText().trim().equals("")) {
            //Chamar a DAO passando o numero da nota
            String cliente = txtPesquisarPedidos.getText().toUpperCase();

//            //TODO: Chamar a DAO e alimentar a tabela
            ArrayList<PedidoDTO> lista = PedidoDAO.buscarPorCliente(cliente);
            listarTabelaPedido(lista);
        } else if (cboPedidos.getSelectedIndex() == 3 && !txtPesquisarPedidos.getText().trim().equals("")) {
            //Chamar a DAO passando o numero da nota
            String cpf = txtPesquisarPedidos.getText();
//            //TODO: Chamar a DAO e alimentar a tabela
            ArrayList<PedidoDTO> lista = PedidoDAO.buscarPorCpf(cpf);
            listarTabelaPedido(lista);
        } else if (cboPedidos.getSelectedIndex() == 4 && !txtPesquisarPedidos.getText().trim().equals("")) {

            double valor = Double.parseDouble(txtPesquisarPedidos.getText());

            ArrayList<PedidoDTO> lista = PedidoDAO.buscarPorValor(valor);
            listarTabelaPedido(lista);
        } else if (cboPedidos.getSelectedIndex() == 5 && !txtPesquisarPedidos.getText().trim().equals("")) {

            String dtBr = txtPesquisarPedidos.getText();

            Date dt = TraduzirData(dtBr);
            ArrayList<PedidoDTO> lista = PedidoDAO.buscarPorData(dt);
            listarTabelaPedido(lista);

        } else {
            JOptionPane.showMessageDialog(rootPane, "Digite na caixa de Texto!");
            txtPesquisarPedidos.grabFocus();
            txtPesquisarPedidos.setBackground(Color.RED);

        }

    }//GEN-LAST:event_btnPesquisarPedidosActionPerformed
    
     /**
     * @author Gabriel Estevam 
     * Esse Metodo Listar Tabela Pedido, ele tem o intuito de reproveitar codigo
     * para cada vez que for necessario na aba Pedidos, listar a tabelaPedidos  
     * em cada busca sendo com filtro ou sem filtro 
     * @param ArrayLit<PedidoDTO> lista 
     */
    
    public void listarTabelaPedido(ArrayList<PedidoDTO> lista) {
        // pegando o modelo da tabela 
        DefaultTableModel modelo = (DefaultTableModel) tblPedidos.getModel();
        modelo.setRowCount(0);
        //instanciando dtBrasil para usar o metodo Format para deixar a Data no formato do Brasil 
        SimpleDateFormat dtBrasil = new SimpleDateFormat("dd/MM/yyyy");
        for (PedidoDTO item : lista) {
            modelo.addRow(new String[]{
                //Colocando os dados do ArrayList<PedidoDTO> na tabela Pedidos
                String.valueOf(item.getCod()),
                String.valueOf(item.getCliente()),
                String.valueOf(item.getCpf()),
                String.valueOf("R$ " + item.getValor()),
                String.valueOf(dtBrasil.format(item.getDt_pedido()))
            });

        }
    }
    
     /**
     * @author Athyla Guilherme 
     * O Metodo Traduzir Data ele recebe uma String com formato da Data usada
     * no Brasil exemplo da String Esperada: 22/10/2023, e transforma essa 
     * String no Tipo Date, com a data usada nos EUA 
     * @param dtBr
     * @return Date;
     */
    public Date TraduzirData(String dtBr) {
        String dia = Character.toString(dtBr.charAt(0)) + Character.toString(dtBr.charAt(1));
        String mes = Character.toString(dtBr.charAt(3)) + Character.toString(dtBr.charAt(4));
        String ano = Character.toString(dtBr.charAt(6)) + Character.toString(dtBr.charAt(7))
                + Character.toString(dtBr.charAt(8)) + Character.toString(dtBr.charAt(9));
        Date data = null;
        if (Integer.parseInt(mes) > 12 || Integer.parseInt(mes) < 0) {
            JOptionPane.showMessageDialog(rootPane, "Mês informado não existe");

        } else {
            String dtIso = ano + "-" + mes + "-" + dia;

            data = Date.valueOf(dtIso);

        }

        return data;
    }
    private void cboPedidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboPedidosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboPedidosActionPerformed

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        txtPesquisarVendedor.setBackground(Color.WHITE);
        if (txtPesquisarVendedor.getText().trim().equals("") && cboVendedor.getSelectedIndex() == 0) {
            ArrayList<Vendedor> lista
                    = VendedorDAO.listar();

            listarTabelaVendedor(lista);
        } else if (!txtPesquisarVendedor.getText().trim().equals("") && cboVendedor.getSelectedIndex() == 1) {
            String nome = txtPesquisarVendedor.getText().toUpperCase();
            ArrayList<Vendedor> lista
                    = VendedorDAO.listarPorNome(nome);

            listarTabelaVendedor(lista);
        } else if (!txtPesquisarVendedor.getText().trim().equals("") && cboVendedor.getSelectedIndex() == 2) {
            String sexo = txtPesquisarVendedor.getText().toUpperCase();
            ArrayList<Vendedor> lista
                    = VendedorDAO.listarPorSexo(sexo);

            listarTabelaVendedor(lista);
        } else {
            JOptionPane.showMessageDialog(rootPane, "Digite na caixa de texto");
            txtPesquisarVendedor.grabFocus();
            txtPesquisarVendedor.setBackground(Color.RED);
        }
    }//GEN-LAST:event_btnPesquisarActionPerformed

    private void cboVendedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboVendedorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboVendedorActionPerformed
    /**
     * @Bruno Coutinho
     * Esse Botão faz a busca do cliente pelo Cpf, e preenche o nome Cliente 
     * na Aba novo Pedido
     * @param evt 
     */
    private void btnNpBuscarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNpBuscarClienteActionPerformed
       try{ 
        //Buscando no banco de dados com Cpf digitado no TextFiel txtNpCpfCliente 
        ArrayList<Cliente> cliente = ClienteDAO.buscarPorCPF(txtNpCpfCliente.getText());
        //Pegando o Cliente e passando pro objeto Cliente
        objCliente = cliente.get(0);
        //Passando o Nome para TextField txtNpCliente
        txtNpCliente.setText(objCliente.getNome());
        //Desabiltando o TextField txtNpCliente
        txtNpCliente.enable(false);
       }catch(Exception e){
           JOptionPane.showMessageDialog(rootPane, "CPF Não Existe no sistema");
       }
       

    }//GEN-LAST:event_btnNpBuscarClienteActionPerformed

    private void btnPesquisarProdutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarProdutosActionPerformed
        ArrayList<Produto> lista = ProdutoDAO.listar();
        String busca = (String) cbxConsulta.getSelectedItem();

        DefaultTableModel modelo = (DefaultTableModel) tblProdutos.getModel();
        modelo.setRowCount(0);

        if (txtPesquisarProdutos.getText().trim().equals("")) {
            for (Produto item : lista) {
                modelo.addRow(new String[]{
                    String.valueOf((item.getIdProduto())),
                    String.valueOf((item.getNomeMarca())),
                    String.valueOf((item.getNome())),
                    String.valueOf((item.getDescricao())),
                    String.valueOf((item.getPreco())),
                    String.valueOf((item.getQntd()))
                });
            }
        } else if (busca.equals(("Marca"))) {

            String marca = txtPesquisarProdutos.getText();
            ArrayList<Produto> listaMarca = ProdutoDAO.listarMarca(marca);

            for (Produto item : listaMarca) {
                modelo.addRow(new String[]{
                    String.valueOf((item.getIdProduto())),
                    String.valueOf((item.getNomeMarca())),
                    String.valueOf((item.getNome())),
                    String.valueOf((item.getDescricao())),
                    String.valueOf((item.getPreco())),
                    String.valueOf((item.getQntd()))
                });
            }
        }else if(busca.equals(("Produto"))){
            String processador = txtPesquisarProdutos.getText();
            ArrayList<Produto> listaProcessador = ProdutoDAO.listarProcessador(processador);

            for (Produto item : listaProcessador) {
                modelo.addRow(new String[]{
                    String.valueOf((item.getIdProduto())),
                    String.valueOf((item.getNomeMarca())),
                    String.valueOf((item.getNome())),
                    String.valueOf((item.getDescricao())),
                    String.valueOf((item.getPreco())),
                    String.valueOf((item.getQntd()))
                });
            }
        }


    }//GEN-LAST:event_btnPesquisarProdutosActionPerformed
    /**
     * @author Eduardo Assis
     * Esse botão chamado btnPesquisarCliente, realizar a busca por cliente no banco de dados,
     * a busca pode ser feita com filtro e sem filtro também
     * @param evt 
     */
    private void btnPesquisarClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarClientesActionPerformed
        //Pegando qual filtro foi utilizado do combo box chamado jblBusca
        String busca = (String) jblbusca.getSelectedItem();
        //Verificando se não foi nada Digitado no TextField txtPesquisarCliente 
        if (txtPesquisarClientes.getText().trim().equals("") || busca.equals("Buscar por....")) {
            //Pegando todos os clientes do banco de dados
            ArrayList<Cliente> retorno = ClienteDAO.listar();
            //Chamando o Metodo para listar a tabelaCliente
            listarTabelaCliente(retorno);
          //Verificando se o combo box selecionado foi cpf  
        } else if (busca.equals("CPF")) {
            //Pegando o que foi digitado no textField 
            String cpf = txtPesquisarClientes.getText();
            //Passando o que foi Digitado para DAO, e ela retornando os dados da
            //Pesquisa do banco 
            ArrayList<Cliente> retorno = ClienteDAO.buscarPorCPF(cpf);
            //Chamando o Metodo para listar a tabelaCliente
            listarTabelaCliente(retorno);
          //Verificando se o combo box selecionado foi NOME  
        } else if (busca.equals("Nome")) {
            //Pegando o que foi digitado no textField
            String nome = txtPesquisarClientes.getText();
            //Passando o que foi Digitado para DAO, e ela retornando os dados da
            //Pesquisa do banco
            ArrayList<Cliente> retorno = ClienteDAO.buscarPorNome(nome);
            //Chamando o Metodo para listar a tabelaCliente
            listarTabelaCliente(retorno);

        }
    }//GEN-LAST:event_btnPesquisarClientesActionPerformed

    private void btnAdicionarNovoPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarNovoPedidoActionPerformed

        if (!txtNpQtd.getText().trim().equalsIgnoreCase("") && !txtNpAddProduto.getText().trim().equalsIgnoreCase("")) {
            int qtd = Integer.parseInt(txtNpQtd.getText());
            int codProduto = Integer.parseInt(txtNpAddProduto.getText());
            boolean controle = false;

            if (qtd > 0 && codProduto > 0) {
                
                ArrayList<Produto> produto = ProdutoDAO.adicionarNaTabelaNovoPedido(codProduto);
                ArrayList<Marca> nomeMarca = MarcaDAO.PegarMarca(produto.get(0).getMarca());

                //Verificando ser tem estoque do produto
                if (produto.get(0).getQntd() < qtd) {
                    JOptionPane.showMessageDialog(rootPane, "Produto não tem estoque para quantidade pedida, \n"
                            + "Produto: " + produto.get(0).getNome() + " Tem Disponivel em estoque: " + produto.get(0).getQntd() + " Unidades");
                } // Fim Verificando ser tem estoque do produto
                else {

                    //Pegando os dados para Passar a Tabela
                    int cod = produto.get(0).getIdProduto();
                    int marca = produto.get(0).getMarca();
                    String nome_Marca = nomeMarca.get(0).getMarca();
                    String nomeProduto = produto.get(0).getNome();
                    double preco = produto.get(0).getPreco();

                    DefaultTableModel modelo = (DefaultTableModel) tblNovoPedido.getModel();
                    modelo.setRowCount(ControleTabelaNovoPedido);

                    //Verificando se o produto já existe na tabela
                    for (int row = 0; row < modelo.getRowCount(); row++) {
                        String verificar = String.valueOf(modelo.getValueAt(row, 0));
                        if (verificar.equalsIgnoreCase(String.valueOf(cod))) {
                            controle = true;
                            break;
                        }

                    }
                    // Fim Verificando se o produto já existe na tabela

                    // Passando para a tabela 
                    if (controle == false) {
                        modelo.addRow(new String[]{String.valueOf(cod), String.valueOf(marca), nome_Marca, nomeProduto, String.valueOf(qtd), String.valueOf(preco)});
                        valorTotal += qtd * preco;
                        txtNpValorTotal.setText(String.valueOf(valorTotal));
                        ControleTabelaNovoPedido++;
                    } // Fim Passando para a tabela
                    else {
                        JOptionPane.showMessageDialog(rootPane, "Produto Já Existe");
                    }

                }

            } else {
                JOptionPane.showMessageDialog(rootPane, "Valor Digitado em Quantidade ou Codigo são invalidos");
            }

        } else {
            JOptionPane.showMessageDialog(rootPane, "Campo Quantidade ou Codigo Produto Vazio");
        }

    }//GEN-LAST:event_btnAdicionarNovoPedidoActionPerformed

    private void btnNpExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNpExcluirActionPerformed
        int linhaSelecionada = tblNovoPedido.getSelectedRow();
        DefaultTableModel modelo = (DefaultTableModel) tblNovoPedido.getModel();
        if (linhaSelecionada < 0) {
            JOptionPane.showMessageDialog(rootPane, "Selecione uma linha");
        } else {
            String qtdTexto = String.valueOf(modelo.getValueAt(linhaSelecionada, 4));
            String precoTexto = String.valueOf(modelo.getValueAt(linhaSelecionada, 5));
            int quantidade = Integer.parseInt(qtdTexto);
            double preco = Double.parseDouble(precoTexto);
            valorTotal -= preco * quantidade;
            txtNpValorTotal.setText(String.valueOf(valorTotal));
            modelo.removeRow(linhaSelecionada);
            ControleTabelaNovoPedido--;

        }
    }//GEN-LAST:event_btnNpExcluirActionPerformed

    private void btnRelatorioAnaliticoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRelatorioAnaliticoActionPerformed
        int linhaSelecionada = tblRelatorioSintetico.getSelectedRow();

        //Resgatar os dados das colunas
        DefaultTableModel modelo = (DefaultTableModel) tblRelatorioSintetico.getModel();

        if (linhaSelecionada >= 0) {
            int id
                    = Integer.parseInt(modelo.getValueAt(linhaSelecionada, 0)
                            .toString());

            ArrayList<PedidoDetalhesDTO> pedDetalhes = PedidoDAO.detalhes(id);

            DetalhePedido dp = new DetalhePedido(pedDetalhes);
            dp.setVisible(true);

        } else {
            JOptionPane.showMessageDialog(rootPane,
                    "Selecione uma linha!");
        }
    }//GEN-LAST:event_btnRelatorioAnaliticoActionPerformed

    private void btnRelatorioSinteticoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRelatorioSinteticoActionPerformed
        String inicio = txtInicio.getText();
        double total = 0;
        String fim = txtFim.getText();
        SimpleDateFormat dtBrasil = new SimpleDateFormat("dd/MM/yyyy");

        Date dtInicio = TraduzirData(inicio);
        Date dtFim = TraduzirData(fim);

        DefaultTableModel modelo = (DefaultTableModel) tblRelatorioSintetico.getModel();
        modelo.setRowCount(0);

        ArrayList<PedidoDTO> lista = PedidoDAO.relatorioSintetico(dtInicio, dtFim);

        for (PedidoDTO item : lista) {

            total += item.getValor();
            modelo.addRow(new String[]{
                String.valueOf(item.getCod()),
                String.valueOf(item.getValor()),
                String.valueOf(item.getDt_pedido()),
                String.valueOf(item.getCliente()),});
        }

        lblValorDeTotalDeVendas.setText("R$ " + String.valueOf(total));


    }//GEN-LAST:event_btnRelatorioSinteticoActionPerformed

    private void jblbuscaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jblbuscaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jblbuscaActionPerformed
     /**
     * @author Diogo Nieto
     * Esse Metodo Listar Tabela Cliente, ele tem como objetivo de reproveitar codigo
     * para cada vez que for necessario na aba Cliente, listar a tabelaCliente 
     * em cada busca sendo com filtro ou sem filtro. 
     * @param ArrayLit<Cliente> lista 
     */
    public void listarTabelaCliente(ArrayList<Cliente> lista) {
        DefaultTableModel model = (DefaultTableModel) tblClientes.getModel();
        model.setRowCount(0);

        for (Cliente item : lista) {
            model.addRow(new String[]{
                String.valueOf(item.getIdCliente()),
                String.valueOf(item.getCPF()),
                String.valueOf(item.getNome()),
                item.getTelefone(),
                item.getEmail()});
        }
    }
     /**
     * @author João Pedro
     * Esse Metodo Listar Tabela Vendedor, ele tem como sua principal Missão 
     * reproveitar codigo para cada vez que for necessario  na aba Vendedor,
     * listar a tabelaVendedor em cada busca sendo com filtro ou sem filtro.      * 
     * @param ArrayLit<Vendedor> lista 
     */
    public void listarTabelaVendedor(ArrayList<Vendedor> lista) {
        DefaultTableModel modelo = (DefaultTableModel) tblVendedor.getModel();
        modelo.setRowCount(0);
        SimpleDateFormat dtBrasil = new SimpleDateFormat("dd/MM/yyyy");
        for (Vendedor item : lista) {
            modelo.addRow(new String[]{
                String.valueOf(item.getIdVendedor()),
                String.valueOf(item.getNome()),
                String.valueOf(dtBrasil.format(item.getDataNascimento())),
                String.valueOf(item.getEmail()),
                String.valueOf(item.getSexo()),});

        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(base.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(base.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(base.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(base.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new base().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionarNovoPedido;
    private javax.swing.JButton btnAtualizarClientes;
    private javax.swing.JButton btnAtualizarProdutos;
    private javax.swing.JButton btnAtualizarVendedor;
    private javax.swing.JButton btnCadastrarClientes;
    private javax.swing.JButton btnCadastrarProdutos;
    private javax.swing.JButton btnCadastrarVendedor;
    private javax.swing.JButton btnConfirmar;
    private javax.swing.JButton btnDetalhesClientes;
    private javax.swing.JButton btnDetalhesPedido;
    private javax.swing.JButton btnExcluirClientes;
    private javax.swing.JButton btnExcluirPedidos;
    private javax.swing.JButton btnExcluirProdutos;
    private javax.swing.JButton btnExcluirVendedor;
    private javax.swing.JButton btnNpBuscarCliente;
    private javax.swing.JButton btnNpConfirmar;
    private javax.swing.JButton btnNpExcluir;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JButton btnPesquisarClientes;
    private javax.swing.JButton btnPesquisarPedidos;
    private javax.swing.JButton btnPesquisarProdutos;
    private javax.swing.JButton btnRelatorioAnalitico;
    private javax.swing.JButton btnRelatorioSintetico;
    private javax.swing.JComboBox<String> cboPedidos;
    private javax.swing.JComboBox<String> cboVendedor;
    private javax.swing.JComboBox<String> cbxConsulta;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JComboBox<String> jblbusca;
    private javax.swing.JLabel lblNpCPF;
    private javax.swing.JLabel lblNpCliente;
    private javax.swing.JLabel lblNpCliente2;
    private javax.swing.JLabel lblNpDt;
    private javax.swing.JLabel lblNpProduto;
    private javax.swing.JLabel lblNpProduto1;
    private javax.swing.JLabel lblNpVendedor;
    private javax.swing.JLabel lblTotalDeVendas;
    private javax.swing.JLabel lblValorDeTotalDeVendas;
    private javax.swing.JPanel pnlClientes;
    private javax.swing.JPanel pnlNP;
    private javax.swing.JTabbedPane pnlNovoPedido;
    private javax.swing.JPanel pnlPedidos;
    private javax.swing.JPanel pnlProdutos;
    private javax.swing.JPanel pnlRelatorio;
    private javax.swing.JPanel pnlVendedor;
    private javax.swing.JTable tblClientes;
    private javax.swing.JTable tblNovoPedido;
    private javax.swing.JTable tblPedidos;
    private javax.swing.JTable tblProdutos;
    private javax.swing.JTable tblRelatorioSintetico;
    private javax.swing.JTable tblVendedor;
    private javax.swing.JFormattedTextField txtFim;
    private javax.swing.JFormattedTextField txtInicio;
    private javax.swing.JFormattedTextField txtNpAddProduto;
    private javax.swing.JTextField txtNpCliente;
    private javax.swing.JFormattedTextField txtNpCpfCliente;
    private javax.swing.JFormattedTextField txtNpDtPedido;
    private javax.swing.JFormattedTextField txtNpQtd;
    private javax.swing.JTextField txtNpValorTotal;
    private javax.swing.JTextField txtNpVendedor;
    private javax.swing.JTextField txtPesquisarClientes;
    private javax.swing.JTextField txtPesquisarPedidos;
    private javax.swing.JTextField txtPesquisarProdutos;
    private javax.swing.JTextField txtPesquisarVendedor;
    private javax.swing.JLabel txtRelatorioSintetico;
    // End of variables declaration//GEN-END:variables
}
